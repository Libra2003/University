#include <stdio.h>
#include <stdlib.h>
#include <unistd.h> //Header file for sleep(). man 3 sleep for details.
#include <pthread.h>

// A normal C function that is executed as a thread
// when its name is specified in pthread_create()
int counter =0;
pthread_mutex_t m1 = PTHREAD_MUTEX_INITIALIZER;

void *myThreadFun1(void *vargp)
{
for(int i=0;i<=5;i++)
{
printf("Print from T1 \n");
pthread_mutex_lock(&m1);
int a =counter;
sleep(4);
a = a+100;
counter=a;
pthread_mutex_unlock(&m1);
printf("counter from T1  :: %d\n",counter);
}
return NULL;
}

void *myThreadFun2(void *vargp)
{
for(int i=0;i<=5;i++)
{
printf("Print from T2 \n");
pthread_mutex_lock(&m1);
int a =counter;
sleep(3);
a++;
counter=a;
pthread_mutex_unlock(&m1);
printf("counter from T2  :: %d\n",counter);
}
return NULL;
}

int main()
{
	pthread_t thread_id1, thread_id2;
	printf("Before Thread\n");
	pthread_create(&thread_id1, NULL, myThreadFun1, NULL);
	pthread_create(&thread_id2, NULL, myThreadFun2, NULL);
	pthread_join(thread_id1, NULL);
	pthread_join(thread_id2, NULL);
	printf("After Thread\n");
	
printf("counter from main  :: %d\n",counter);
	exit(0);
}